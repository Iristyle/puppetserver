# Don't run Azure when a branch is updated, only when a PR is updated.
# Prevents double builds when a PR is made from the main repo and not a fork.
trigger: none
pr:
  autoCancel: true
  branches:
    include:
    - '*'

pool:
  # self-hosted agent on Windows 10 1903 environment
  # includes newer Docker engine with LCOW enabled, new build of LCOW image
  # includes Ruby 2.5, Go 1.10, Node.js 10.10
  name: Default

variables:
  BUILDKIT_HOST: tcp://0.0.0.0:1234
  BUILDKIT_VERSION: 0.6.3
  DOCKER_BUILD_FLAGS: --progress plain
  NAMESPACE: puppet
  CONTAINER_NAME: puppetserver
  CONTAINER_BUILD_PATH: .
  CONTAINER_NAME_BASE: puppetserver-base
  LINT_IGNORES: DL3008 DL3018 DL4000 DL4001 DL3028
  BUILD_OPTIONS: --memory 4g --build-arg namespace=puppet

workspace:
  clean: resources

steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  clean: true  # whether to fetch clean each time

- powershell: |
    # can't use --privileged which is probably a deal killer
    # https://github.com/moby/moby/pull/31740
    # docker run --name buildkit -d -p 1234:1234 moby/buildkit --addr tcp://0.0.0.0:1234
    # TODO: looks like this *might* be possible
    # see https://github.com/moby/buildkit/blob/master/docs/rootless.md#about---oci-worker-no-process-sandbox
    # docker run --name buildkitd -d -p 1234:1234 --security-opt seccomp=unconfined --security-opt apparmor=unconfined moby/buildkit:rootless --oci-worker-no-process-sandbox --addr tcp://0.0.0.0:1234
    docker run --name buildkitd -d -p 1234:1234 --security-opt seccomp=unconfined --security-opt apparmor=unconfined moby/buildkit:rootless --security-opt systempaths=unconfined --addr tcp://0.0.0.0:1234
    # currently returns an error:
    # appears to be https://github.com/rootless-containers/rootlesskit/issues/48
    # [rootlesskit:parent] error: failed to setup UID/GID map: failed to compute uid/gid map: No subuid ranges found for user "root"
    # also see running client + daemon in same container at https://github.com/moby/buildkit#daemonless
    # buildkitd: failed to open database file /var/lib/buildkit/runc-native/metadata.db: invalid argument
    $uri = "https://github.com/moby/buildkit/releases/download/v${ENV:BUILDKIT_VERSION}/buildkit-v${ENV:BUILDKIT_VERSION}.windows-amd64.tar.gz"
    $destination = "${ENV:TEMP}\buildkit-v${ENV:BUILDKIT_VERSION}.windows-amd64.tar.gz"
    (New-Object System.Net.WebClient).DownloadFile($uri, $destination)
    Push-Location $ENV:TEMP; tar -xzvf $destination; Pop-Location
    &${ENV:TEMP}\bin\buildctl --version
  displayName: Setup BuildKit

- powershell: |
    $gemfile = Join-Path -Path (Get-Location) -ChildPath 'docker/Gemfile'
    $gempath = Join-Path -Path (Get-Location) -ChildPath 'docker/.bundle/gems'
    bundle config --local gemfile $gemfile
    bundle config --local path $gempath
    bundle install --with test
  displayName: Fetch Dependencies
  timeoutInMinutes: 1
  name: fetch_deps

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Write-HostDiagnostics
  displayName: Diagnostic Host Information
  timeoutInMinutes: 2
  name: hostinfo

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Lint-Dockerfile -Name $ENV:CONTAINER_NAME_BASE -Path "docker/puppetserver/base.Dockerfile" -Ignore ($ENV:LINT_IGNORES -split ' ')
  displayName: Lint $(CONTAINER_NAME_BASE) Dockerfile
  timeoutInMinutes: 1
  name: lint_base_dockerfile

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Lint-Dockerfile -Name $ENV:CONTAINER_NAME -Ignore ($ENV:LINT_IGNORES -split ' ')
  displayName: Lint $(CONTAINER_NAME) Dockerfile
  timeoutInMinutes: 1
  name: lint_dockerfile

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Build-Container -Name $ENV:CONTAINER_NAME_BASE -Dockerfile "docker/puppetserver/base.Dockerfile"  -Namespace $ENV:NAMESPACE -AdditionalOptions ($ENV:BUILD_OPTIONS -split ' ')
  displayName: Build $(CONTAINER_NAME_BASE) Container
  timeoutInMinutes: 5
  name: build_base_container

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Build-Container -Name $ENV:CONTAINER_NAME -Namespace $ENV:NAMESPACE -Pull $false -PathOrUri $ENV:CONTAINER_BUILD_PATH -AdditionalOptions ($ENV:BUILD_OPTIONS -split ' ')
  displayName: Build $(CONTAINER_NAME) Container
  timeoutInMinutes: 20
  name: build_container

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Initialize-TestEnv
  displayName: Prepare Test Environment
  name: test_prepare

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Invoke-ContainerTest -Name $ENV:CONTAINER_NAME -Namespace $ENV:NAMESPACE -Options $ENV:CONTAINER_NAME/.rspec
  displayName: Test $(CONTAINER_NAME)
  timeoutInMinutes: 10
  name: test_container

- task: PublishTestResults@2
  displayName: Publish $(CONTAINER_NAME) test results
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'docker/$(CONTAINER_NAME)/TEST-*.xml'
    testRunTitle: $(CONTAINER_NAME) Test Results

- powershell: |
    . "$(bundle show pupperware)/ci/build.ps1"
    Clear-BuildState -Name $ENV:CONTAINER_NAME -Namespace $ENV:NAMESPACE
    Clear-BuildState -Name $ENV:CONTAINER_NAME_BASE -Namespace $ENV:NAMESPACE
  displayName: Container Cleanup
  timeoutInMinutes: 4
  condition: always()
